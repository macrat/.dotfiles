" ========= common ====================
syntax on
filetype plugin indent on
set incsearch ignorecase smartcase nohlsearch
set shiftwidth=4 tabstop=4 expandtab smartindent
set scrolloff=0 textwidth=0
set nrformats=bin,hex formatoptions+=mM

set fileencodings=utf-8,sjis,euc-jp

" :grep
set grepprg=rg\ --vimgrep
nnoremap ]q :cn<CR>
nnoremap [q :cp<CR>

" :term
set termwinkey=<C-L>
tnoremap <Esc> <C-\><C-n>
autocmd TerminalOpen * setlocal bufhidden=hide


" ========= file types ====================
autocmd FileType go,make                        setlocal noexpandtab
autocmd FileType python                         setlocal colorcolumn=80 suffixesadd=.py
autocmd FileType markdown,vim,json,yaml,toml    setlocal shiftwidth=2 tabstop=2
autocmd FileType javascript,javascriptreact,vue setlocal colorcolumn=100 suffixesadd=.js,.jsx,.vue
autocmd FileType typescript,typescriptreact     setlocal colorcolumn=100 suffixesadd=.ts,.tsx


" ========= styling ====================
set fillchars=vert:â”‚

highlight! link    SignColumn LineNr
autocmd FileType markdown highlight! Conceal guifg=DarkCyan guibg=NONE

" enable true color
set termguicolors
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"

" disable conceal of markdown syntax
let g:markdown_syntax_conceal = 0


" ========= data directory ====================
let datadir = expand("$XDG_RUNTIME_DIR/vim")
if datadir == "/vim"
  let datadir = expand("/tmp/$USER/vim")
endif

set undofile
let &undodir = datadir .. "/undo"
if !isdirectory(&undodir)
  call mkdir(&undodir, "p")
endif

set nobackup

let g:netrw_home = datadir


" ========= vim-gitgutter ====================
set signcolumn=yes updatetime=500


" ========= vim-gfm-syntax ====================
let g:markdown_fenced_languages = ["go", "python", "javascript", "typescript", "bash"]
let g:gfm_syntax_highlight_mention = 0
let g:gfm_syntax_highlight_issue_number = 0


" ========= Tabular ====================
let g:no_default_tabular_maps = 1

noremap \|       :Tabularize /\|/l1<CR>
noremap \:       :Tabularize /^.\{-}:\zs/l0l1<CR>
noremap \=       :Tabularize /^.\{-}\zs=/l1<CR>
noremap \,       :Tabularize /,\zs/l0l1<CR>
noremap \<Space> :Tabularize /[^ ]\+\zs /l0<CR>

ounmap \|
ounmap \:
ounmap \=
ounmap \,
ounmap \<Space>


" ========= vim-table-mode ====================
let g:table_mode_corner = "|"


" ========= vim-lsp ====================
autocmd User lsp_buffer_enabled if exists("+tagfunc") | setlocal tagfunc=lsp#tagfunc | endif
autocmd User lsp_buffer_enabled setlocal omnifunc=lsp#complete
let g:lsp_diagnostics_float_cursor           = 1
let g:lsp_diagnostics_float_delay            = 100
let g:lsp_diagnostics_highlights_enabled     = 0
let g:lsp_diagnostics_sign_delay             = 100
let g:lsp_document_highlight_enabled         = 0
let g:lsp_document_code_action_signs_enabled = 0
let g:lsp_hover_ui                           = "float"
nnoremap K     :LspHover<CR>
nnoremap <C-K> K
nnoremap ]e    :LspNextDiagnostic<CR>
nnoremap [e    :LspPreviousDiagnostic<CR>

let g:lsp_settings_enable_suggestions = 0


" ========= ctrl-p ====================
let g:ctrlp_working_path_mode = ""  " disable project root finder


" ========= load local vimrc ====================
if filereadable(expand("~/.vimrc.local"))
  source ~/.vimrc.local
endif
